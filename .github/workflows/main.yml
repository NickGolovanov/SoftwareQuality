name: DTAP Pipeline for Java

on:
  push:
    branches:
      - develop
      - test
      - acceptance
      - main

jobs:
  # Development Phase (Unit Tests)
  development:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package  

      - name: Run unit tests
        run: mvn test

  # Testing Phase (Regression Tests)
  testing:
    if: github.ref == 'refs/heads/test'
    needs: development
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run integration tests
        run: mvn verify

  # # Acceptance Phase (Staging Deployment)
  # acceptance:
  #   if: github.ref == 'refs/heads/acceptance'
  #   needs: testing
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: 'temurin'
  #         java-version: '17'

  #     - name: Deploy to Staging (UAT)
  #       env:
  #         STAGING_SERVER: ${{ secrets.STAGING_SERVER }}
  #         STAGING_USER: ${{ secrets.STAGING_USER }}
  #         STAGING_PASS: ${{ secrets.STAGING_PASS }}
  #       run: |
  #         echo "Deploying to Staging..."
  #         scp target/*.jar $STAGING_USER@$STAGING_SERVER:/var/www/staging
  #         ssh $STAGING_USER@$STAGING_SERVER "java -jar /var/www/staging/*.jar"

  # Production Phase (Push Docker Image)
  production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/myproject-name:${{ github.sha }} .

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # Push Docker Image to Docker Hub
      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/myproject-name:${{ github.sha }}